// ExercÃ­cio 01: Inspecione um documento para que vocÃª se familiarize com a estrutura.
// Entenda os atributos e os nÃ­veis existentes.
  -> use class;
  -> db.duperheroes.findOne();

// ExercÃ­cio 02: ğŸš€ Selecione todos os super-herÃ³is com menos de 1.80m de altura. Lembre-se de que essa informaÃ§Ã£o estÃ¡ em centÃ­metros.
  -> use class;
  -> db.superheroes.find({ "aspects.height": { $lt: 180 } });
  

// ExercÃ­cio 03: ğŸš€ Retorne o total de super-herÃ³is menores que 1.80m.
  -> use class;
  -> db.superheroes.find({ "aspects.height": { $lt: 180 } }).count();
  => RETORNO: 421;

// ExercÃ­cio 04: Retorne o total de super-herÃ³is com atÃ© 1.80m.
  -> use class;
  -> db.superheroes.find({ "aspects.height": { $lte: 180 } }).count();
  => RETORNO: 459;

// ExercÃ­cio 05: Selecione um super-herÃ³i com 2.00m ou mais de altura.
  -> use class;
  -> db.superheroes.findOne({ "aspects.height": { $gte: 200 } });
  => RETORNO: {
  _id: ObjectId("627e89f33d29d4c30ea7955a"),
  name: 'Abomination',
  alignment: 'bad',
  gender: 'Male',
  race: 'Human / Radiation',
  aspects: { eyeColor: 'green', hairColor: 'No Hair', height: 203, weight: 200 },
  publisher: 'Marvel Comics'
};

// ExercÃ­cio 06: Retorne o total de super-herÃ³is com 2.00m ou mais.
  -> use class;
  -> db.superheroes.find({ "aspects.height": { $gte: 200 } }).count();
  => RETORNO: 59;

// ExercÃ­cio 07: Selecione todos os super-herÃ³is que tÃªm olhos verdes.
  -> use class;
  -> db.superheroes.find({ "aspects.eyeColor": "green" }).count();
  => RETORNO: 73;

// ExercÃ­cio 08: Retorne o total de super-herÃ³is com olhos azuis.
  -> use class;
  -> db.superheroes.find({ "aspects.eyeColor": "blue" }).count();
  => RETORNO: 225;

// ExercÃ­cio 09: ğŸš€ Utilizando o operador $in, selecione todos os super-herÃ³is com cabelos pretos ou carecas ("No Hair").
  -> use class;
  -> db.superheroes.find({ "aspects.hairColor": { $in: ["No Hair", "Black"]} });
  => RETORNO: {
    ... // OBJETO GRANDE (233 Resultados)
  };

// ExercÃ­cio 10: Retorne o total de super-herÃ³is com cabelos pretos ou carecas ("No Hair").
  -> use class;
  -> db.superheroes.find({ "aspects.hairColor": { $in: ["No Hair", "Black"]} }).count();
  => RETORNO: 233;

// ExercÃ­cio 11: Retorne o total de super-herÃ³is que nÃ£o tenham cabelos pretos ou nÃ£o sejam carecas.
  -> use class;
  -> db.superheroes.find({ "aspects.hairColor": { $nin: ["No Hair", "Black"]} }).count();
  => RETORNO: 501;

// ExercÃ­cio 12: ğŸš€ Utilizando o operador $not, retorne o total de super-herÃ³is que nÃ£o tenham mais de 1.80m de altura.
  -> use class;
  -> db.superheroes.find({ "aspects.height": { $not: { $gt: 180 } }}).count();
  => RETORNO: 459;

// ExercÃ­cio 13: Selecione todos os super-herÃ³is que nÃ£o sejam humanos nem sejam maiores do que 1.80m.
  -> use class;
  -> db.superheroes.find({ $and: [{ "aspects.race": { $ne: "Human / Radiation" }}, { "aspects.height": { $not: { $gt: 180 } }}] }).count();
  => RETORNO: 459;

// ExercÃ­cio 14: Selecione todos os super-herÃ³is com 1.80m ou 2.00m de altura e que sejam publicados pela Marvel Comics.
  -> use class;
  -> db.superheroes.find({ $and: [{ $or: [{ "aspects.height": 180 }, { "aspects.height": 200 }] }, { "publisher": "Marvel Comics" }]} );

// ExercÃ­cio 15: Selecione todos os super-herÃ³is que pesem entre 80kg e 100kg, sejam Humanos ou Mutantes e nÃ£o sejam publicados pela DC Comics.
  -> use class;
  -> db.superheroes.find({ $and: [ {"aspects.weight": { $gte: 80, $lte: 100 }},{$or: [{ race: "Human" }, { race: "Mutant" }]},{ publisher: { $ne: "DC Comics" }}]}).pretty();

// ExercÃ­cio 16: Retorne o total de documentos que nÃ£o contÃªm o campo race.
  -> use class;
  -> db.superheroes.find({ race: { $exists: false } }).count();

// ExercÃ­cio 17: Retorne o total de documentos que contÃªm o campo hairColor.
  -> use class;
  -> db.superheroes.find({ "aspects.hairColor": { $exists: true } }).count();

// ExercÃ­cio 18: Remova apenas um documento publicado pela Sony Pictures.
  -> use class;
  -> db.superheroes.deleteOne({ publisher: "Sony Pictures" }).count();

// ExercÃ­cio 19: ğŸš€ Remova todos os documentos publicados pelo George Lucas.
  -> use class;
  -> db.superheroes.deleteMany({ "publisher": "George Lucas" });