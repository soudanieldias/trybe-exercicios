/*
Crie uma fun√ß√£o que receba uma string e retorne true se for um pal√≠ndromo , ou false , se n√£o for.

    Exemplo de pal√≠ndromo: arara .
    verificaPalindrome('arara') ;
    Retorno esperado: true
    verificaPalindrome('desenvolvimento') ;
    Retorno esperado: false
*/

//Duas formas de resolver o exerc√≠cio
/*
  Como podemos acessar a posi√ß√£o de uma string da mesma forma que
  acessamos um array, podemos ent√£o, comparar o caracter da
  posi√ß√£o 0 (primeira) com o caracter da √∫ltima posi√ß√£o (length - 1).
  Dessa forma conseguimos verificar se a sequ√™ncia de caracteres
  na string √© a mesma do inicio ao fim e do fim ao inicio üòâ
*/

function verificaPalindrome(word){
  for(index in word){
    if(word[index] != word[(word.length - 1) - index]){
      return false;
    }
  }
  return true;
}
function verificaPalindrome(string) {
  let reverse = string.split('').reverse().join('');
  if (reverse === string) {
    return true;
  } else {
    return false;
  }
}

console.log(verificaPalindrome('arara')); //true
console.log(verificaPalindrome('desenvolvimento')); //false